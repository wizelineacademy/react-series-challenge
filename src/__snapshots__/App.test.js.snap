// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Favorites tests render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div
        className="app-root"
>
        <withRouter(Connect(SearchBox)) />
        <div
                className="app"
        >
                <Route
                        component={[Function]}
                        exact={true}
                        path="/"
                />
                <Route
                        component={[Function]}
                        path="/favorites"
                />
                <Route
                        component={[Function]}
                        path="/search"
                />
                <Route
                        component={[Function]}
                        path="/gif/:giphy_id"
                />
        </div>
        <Connect(MenuComponent) />
</div>,
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <withRouter(Connect(SearchBox)) />,
          <div
            className="app"
>
            <Route
                        component={[Function]}
                        exact={true}
                        path="/"
            />
            <Route
                        component={[Function]}
                        path="/favorites"
            />
            <Route
                        component={[Function]}
                        path="/search"
            />
            <Route
                        component={[Function]}
                        path="/gif/:giphy_id"
            />
</div>,
          <Connect(MenuComponent) />,
        ],
        "className": "app-root",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Route
                component={[Function]}
                exact={true}
                path="/"
/>,
              <Route
                component={[Function]}
                path="/favorites"
/>,
              <Route
                component={[Function]}
                path="/search"
/>,
              <Route
                component={[Function]}
                path="/gif/:giphy_id"
/>,
            ],
            "className": "app",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/favorites",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/search",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/gif/:giphy_id",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          className="app-root"
>
          <withRouter(Connect(SearchBox)) />
          <div
                    className="app"
          >
                    <Route
                              component={[Function]}
                              exact={true}
                              path="/"
                    />
                    <Route
                              component={[Function]}
                              path="/favorites"
                    />
                    <Route
                              component={[Function]}
                              path="/search"
                    />
                    <Route
                              component={[Function]}
                              path="/gif/:giphy_id"
                    />
          </div>
          <Connect(MenuComponent) />
</div>,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <withRouter(Connect(SearchBox)) />,
            <div
              className="app"
>
              <Route
                            component={[Function]}
                            exact={true}
                            path="/"
              />
              <Route
                            component={[Function]}
                            path="/favorites"
              />
              <Route
                            component={[Function]}
                            path="/search"
              />
              <Route
                            component={[Function]}
                            path="/gif/:giphy_id"
              />
</div>,
            <Connect(MenuComponent) />,
          ],
          "className": "app-root",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
/>,
                <Route
                  component={[Function]}
                  path="/favorites"
/>,
                <Route
                  component={[Function]}
                  path="/search"
/>,
                <Route
                  component={[Function]}
                  path="/gif/:giphy_id"
/>,
              ],
              "className": "app",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/favorites",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/search",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/gif/:giphy_id",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
