// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ExplorePanel ExplorePanel Component should match snapshot (WITH search) 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(ExplorePanel)
    store={
        Object {
            "dispatch": [Function],
            "getState": [Function],
            "subscribe": [Function],
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "data": Array [
        Object {
          "favorite": false,
          "id": "id",
          "original": "original",
          "title": "title",
          "url": "url",
        },
      ],
      "getTrendingGifs": [Function],
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "subscribe": [Function],
      },
      "storeSubscription": Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": undefined,
      },
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "data": Array [
          Object {
            "favorite": false,
            "id": "id",
            "original": "original",
            "title": "title",
            "url": "url",
          },
        ],
        "getTrendingGifs": [Function],
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "subscribe": [Function],
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": undefined,
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`ExplorePanel ExplorePanel Component should match snapshot (no search) 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(ExplorePanel)
    store={
        Object {
            "dispatch": [Function],
            "getState": [Function],
            "subscribe": [Function],
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "data": Array [
        Object {
          "favorite": false,
          "id": "id",
          "original": "original",
          "title": "title",
          "url": "url",
        },
      ],
      "getTrendingGifs": [Function],
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "subscribe": [Function],
      },
      "storeSubscription": Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": undefined,
      },
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "data": Array [
          Object {
            "favorite": false,
            "id": "id",
            "original": "original",
            "title": "title",
            "url": "url",
          },
        ],
        "getTrendingGifs": [Function],
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "subscribe": [Function],
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": undefined,
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
