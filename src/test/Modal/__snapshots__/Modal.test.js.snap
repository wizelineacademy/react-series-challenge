// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test evaluate but not show 1`] = `
<Component
  favorites={
    Object {
      "dcdjc": "dcdcd",
    }
  }
  gift={
    Object {
      "name": "dcdjc",
      "url": "cdcdxs",
    }
  }
  hideGiftModal={[Function]}
  isModalOpen={false}
>
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    closeTimeoutMS={0}
    isOpen={false}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={true}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
    style={
      Object {
        "content": Object {
          "bottom": "auto",
          "height": "auto",
          "left": "50%",
          "overflow": "auto",
          "padding": "0",
          "top": "50%",
          "transform": "translate(-50%, -50%)",
          "width": "210px",
        },
      }
    }
  >
    <ModalPortal
      ariaHideApp={true}
      bodyOpenClassName="ReactModal__Body--open"
      closeTimeoutMS={0}
      defaultStyles={
        Object {
          "content": Object {
            "WebkitOverflowScrolling": "touch",
            "background": "#fff",
            "border": "1px solid #ccc",
            "borderRadius": "4px",
            "bottom": "40px",
            "left": "40px",
            "outline": "none",
            "overflow": "auto",
            "padding": "20px",
            "position": "absolute",
            "right": "40px",
            "top": "40px",
          },
          "overlay": Object {
            "backgroundColor": "rgba(255, 255, 255, 0.75)",
            "bottom": 0,
            "left": 0,
            "position": "fixed",
            "right": 0,
            "top": 0,
          },
        }
      }
      isOpen={false}
      parentSelector={[Function]}
      portalClassName="ReactModalPortal"
      shouldCloseOnEsc={true}
      shouldCloseOnOverlayClick={true}
      shouldFocusAfterRender={true}
      shouldReturnFocusAfterClose={true}
      style={
        Object {
          "content": Object {
            "bottom": "auto",
            "height": "auto",
            "left": "50%",
            "overflow": "auto",
            "padding": "0",
            "top": "50%",
            "transform": "translate(-50%, -50%)",
            "width": "210px",
          },
        }
      }
    />
  </Modal>
</Component>
`;

exports[`test evaluate but not shown 1`] = `
<Component
  favorites={
    Object {
      "cdcd": "dcdcd",
    }
  }
  gift={
    Object {
      "name": "dcdjc",
      "url": "cdcdxs",
    }
  }
  hideGiftModal={[Function]}
  isModalOpen={false}
>
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    closeTimeoutMS={0}
    isOpen={false}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={true}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
    style={
      Object {
        "content": Object {
          "bottom": "auto",
          "height": "auto",
          "left": "50%",
          "overflow": "auto",
          "padding": "0",
          "top": "50%",
          "transform": "translate(-50%, -50%)",
          "width": "210px",
        },
      }
    }
  >
    <ModalPortal
      ariaHideApp={true}
      bodyOpenClassName="ReactModal__Body--open"
      closeTimeoutMS={0}
      defaultStyles={
        Object {
          "content": Object {
            "WebkitOverflowScrolling": "touch",
            "background": "#fff",
            "border": "1px solid #ccc",
            "borderRadius": "4px",
            "bottom": "40px",
            "left": "40px",
            "outline": "none",
            "overflow": "auto",
            "padding": "20px",
            "position": "absolute",
            "right": "40px",
            "top": "40px",
          },
          "overlay": Object {
            "backgroundColor": "rgba(255, 255, 255, 0.75)",
            "bottom": 0,
            "left": 0,
            "position": "fixed",
            "right": 0,
            "top": 0,
          },
        }
      }
      isOpen={false}
      parentSelector={[Function]}
      portalClassName="ReactModalPortal"
      shouldCloseOnEsc={true}
      shouldCloseOnOverlayClick={true}
      shouldFocusAfterRender={true}
      shouldReturnFocusAfterClose={true}
      style={
        Object {
          "content": Object {
            "bottom": "auto",
            "height": "auto",
            "left": "50%",
            "overflow": "auto",
            "padding": "0",
            "top": "50%",
            "transform": "translate(-50%, -50%)",
            "width": "210px",
          },
        }
      }
    />
  </Modal>
</Component>
`;

exports[`test will add favorite 1`] = `
<Component
  addFavorite={[Function]}
  favorites={
    Object {
      "cdcd": "dcdcd",
    }
  }
  gift={
    Object {
      "name": "dcdjc",
      "url": "cdcdxs",
    }
  }
  hideGiftModal={[Function]}
  isModalOpen={true}
>
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    closeTimeoutMS={0}
    isOpen={true}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={true}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
    style={
      Object {
        "content": Object {
          "bottom": "auto",
          "height": "auto",
          "left": "50%",
          "overflow": "auto",
          "padding": "0",
          "top": "50%",
          "transform": "translate(-50%, -50%)",
          "width": "210px",
        },
      }
    }
  >
    <ModalPortal
      ariaHideApp={true}
      bodyOpenClassName="ReactModal__Body--open"
      closeTimeoutMS={0}
      defaultStyles={
        Object {
          "content": Object {
            "WebkitOverflowScrolling": "touch",
            "background": "#fff",
            "border": "1px solid #ccc",
            "borderRadius": "4px",
            "bottom": "40px",
            "left": "40px",
            "outline": "none",
            "overflow": "auto",
            "padding": "20px",
            "position": "absolute",
            "right": "40px",
            "top": "40px",
          },
          "overlay": Object {
            "backgroundColor": "rgba(255, 255, 255, 0.75)",
            "bottom": 0,
            "left": 0,
            "position": "fixed",
            "right": 0,
            "top": 0,
          },
        }
      }
      isOpen={true}
      parentSelector={[Function]}
      portalClassName="ReactModalPortal"
      shouldCloseOnEsc={true}
      shouldCloseOnOverlayClick={true}
      shouldFocusAfterRender={true}
      shouldReturnFocusAfterClose={true}
      style={
        Object {
          "content": Object {
            "bottom": "auto",
            "height": "auto",
            "left": "50%",
            "overflow": "auto",
            "padding": "0",
            "top": "50%",
            "transform": "translate(-50%, -50%)",
            "width": "210px",
          },
        }
      }
    >
      <div
        aria-modal="true"
        className="ReactModal__Overlay ReactModal__Overlay--after-open"
        onClick={[Function]}
        onMouseDown={[Function]}
        style={
          Object {
            "backgroundColor": "rgba(255, 255, 255, 0.75)",
            "bottom": 0,
            "left": 0,
            "position": "fixed",
            "right": 0,
            "top": 0,
          }
        }
      >
        <div
          className="ReactModal__Content ReactModal__Content--after-open"
          onClick={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          style={
            Object {
              "WebkitOverflowScrolling": "touch",
              "background": "#fff",
              "border": "1px solid #ccc",
              "borderRadius": "4px",
              "bottom": "auto",
              "height": "auto",
              "left": "50%",
              "outline": "none",
              "overflow": "auto",
              "padding": "0",
              "position": "absolute",
              "right": "40px",
              "top": "50%",
              "transform": "translate(-50%, -50%)",
              "width": "210px",
            }
          }
          tabIndex="-1"
        >
          <styled.img
            alt=""
            src="cdcdxs"
          >
            <img
              alt=""
              className="sc-htpNat fmBtRa"
              src="cdcdxs"
            />
          </styled.img>
          <styled.div>
            <div
              className="sc-bwzfXH hwgLmo"
            >
              <styled.p>
                <p
                  className="sc-bdVaJa bKeyaB"
                >
                  dcdjc
                </p>
              </styled.p>
              <styled.span
                id="hide"
                onClick={[Function]}
              >
                <span
                  className="sc-bxivhb kkJzXi"
                  id="hide"
                  onClick={[Function]}
                >
                  Close
                </span>
              </styled.span>
              <styled.span
                className=""
                id="fav"
                onClick={[Function]}
              >
                <span
                  className="sc-bxivhb kkJzXi"
                  id="fav"
                  onClick={[Function]}
                >
                  Like
                </span>
              </styled.span>
            </div>
          </styled.div>
        </div>
      </div>
    </ModalPortal>
  </Modal>
</Component>
`;

exports[`test will remove favorite 1`] = `
<Component
  deleteFavorite={[Function]}
  favorites={
    Object {
      "dcdjc": "dcdcd",
    }
  }
  gift={
    Object {
      "name": "dcdjc",
      "url": "cdcdxs",
    }
  }
  hideGiftModal={[Function]}
  isModalOpen={true}
>
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    closeTimeoutMS={0}
    isOpen={true}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={true}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
    style={
      Object {
        "content": Object {
          "bottom": "auto",
          "height": "auto",
          "left": "50%",
          "overflow": "auto",
          "padding": "0",
          "top": "50%",
          "transform": "translate(-50%, -50%)",
          "width": "210px",
        },
      }
    }
  >
    <ModalPortal
      ariaHideApp={true}
      bodyOpenClassName="ReactModal__Body--open"
      closeTimeoutMS={0}
      defaultStyles={
        Object {
          "content": Object {
            "WebkitOverflowScrolling": "touch",
            "background": "#fff",
            "border": "1px solid #ccc",
            "borderRadius": "4px",
            "bottom": "40px",
            "left": "40px",
            "outline": "none",
            "overflow": "auto",
            "padding": "20px",
            "position": "absolute",
            "right": "40px",
            "top": "40px",
          },
          "overlay": Object {
            "backgroundColor": "rgba(255, 255, 255, 0.75)",
            "bottom": 0,
            "left": 0,
            "position": "fixed",
            "right": 0,
            "top": 0,
          },
        }
      }
      isOpen={true}
      parentSelector={[Function]}
      portalClassName="ReactModalPortal"
      shouldCloseOnEsc={true}
      shouldCloseOnOverlayClick={true}
      shouldFocusAfterRender={true}
      shouldReturnFocusAfterClose={true}
      style={
        Object {
          "content": Object {
            "bottom": "auto",
            "height": "auto",
            "left": "50%",
            "overflow": "auto",
            "padding": "0",
            "top": "50%",
            "transform": "translate(-50%, -50%)",
            "width": "210px",
          },
        }
      }
    >
      <div
        aria-modal="true"
        className="ReactModal__Overlay ReactModal__Overlay--after-open"
        onClick={[Function]}
        onMouseDown={[Function]}
        style={
          Object {
            "backgroundColor": "rgba(255, 255, 255, 0.75)",
            "bottom": 0,
            "left": 0,
            "position": "fixed",
            "right": 0,
            "top": 0,
          }
        }
      >
        <div
          className="ReactModal__Content ReactModal__Content--after-open"
          onClick={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          style={
            Object {
              "WebkitOverflowScrolling": "touch",
              "background": "#fff",
              "border": "1px solid #ccc",
              "borderRadius": "4px",
              "bottom": "auto",
              "height": "auto",
              "left": "50%",
              "outline": "none",
              "overflow": "auto",
              "padding": "0",
              "position": "absolute",
              "right": "40px",
              "top": "50%",
              "transform": "translate(-50%, -50%)",
              "width": "210px",
            }
          }
          tabIndex="-1"
        >
          <styled.img
            alt=""
            src="cdcdxs"
          >
            <img
              alt=""
              className="sc-htpNat fmBtRa"
              src="cdcdxs"
            />
          </styled.img>
          <styled.div>
            <div
              className="sc-bwzfXH hwgLmo"
            >
              <styled.p>
                <p
                  className="sc-bdVaJa bKeyaB"
                >
                  dcdjc
                </p>
              </styled.p>
              <styled.span
                id="hide"
                onClick={[Function]}
              >
                <span
                  className="sc-bxivhb kkJzXi"
                  id="hide"
                  onClick={[Function]}
                >
                  Close
                </span>
              </styled.span>
              <styled.span
                className="favorite"
                id="fav"
                onClick={[Function]}
              >
                <span
                  className="favorite sc-bxivhb kkJzXi"
                  id="fav"
                  onClick={[Function]}
                >
                  Like
                </span>
              </styled.span>
            </div>
          </styled.div>
        </div>
      </div>
    </ModalPortal>
  </Modal>
</Component>
`;
